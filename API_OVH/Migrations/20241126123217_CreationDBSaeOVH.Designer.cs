// <auto-generated />
using System;
using API_OVH.Models.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace API_OVH.Migrations
{
    [DbContext(typeof(SAE5_BD_OVH_DbContext))]
    [Migration("20241126123217_CreationDBSaeOVH")]
    partial class CreationDBSaeOVH
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("API_OVH.Models.EntityFramework.Batiment", b =>
                {
                    b.Property<int>("IdBatiment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("BATIMENTID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdBatiment"));

                    b.Property<string>("NomBatiment")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("NOMBATIMENT");

                    b.HasKey("IdBatiment")
                        .HasName("PK_BATIMENT");

                    b.ToTable("BATIMENT", (string)null);
                });

            modelBuilder.Entity("API_OVH.Models.EntityFramework.Capteur", b =>
                {
                    b.Property<int>("IdCapteur")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idcapteur");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdCapteur"));

                    b.Property<string>("EstActif")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("char(3)")
                        .HasDefaultValue("NSP")
                        .HasColumnName("estactif");

                    b.Property<int?>("IdSalle")
                        .HasColumnType("integer")
                        .HasColumnName("idsalle");

                    b.Property<string>("NomCapteur")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("nomtypecapteur");

                    b.Property<int?>("SalleIdSalle")
                        .HasColumnType("integer");

                    b.Property<decimal>("XCapteur")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(10,1)")
                        .HasDefaultValue(0m)
                        .HasColumnName("xcapteur");

                    b.Property<decimal>("YCapteur")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(10,1)")
                        .HasDefaultValue(0m)
                        .HasColumnName("ycapteur");

                    b.Property<decimal>("ZCapteur")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(10,1)")
                        .HasDefaultValue(0m)
                        .HasColumnName("zcapteur");

                    b.HasKey("IdCapteur")
                        .HasName("pk_capteur");

                    b.HasIndex("IdSalle");

                    b.HasIndex("SalleIdSalle");

                    b.ToTable("capteur", null, t =>
                        {
                            t.HasCheckConstraint("chk_capteur_actif", "SUPERFICIESALLE >= 0");
                        });
                });

            modelBuilder.Entity("API_OVH.Models.EntityFramework.Direction", b =>
                {
                    b.Property<short>("IdDirection")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("IDDIRECTION");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<short>("IdDirection"));

                    b.Property<string>("LettresDirection")
                        .IsRequired()
                        .HasColumnType("varchar(2)")
                        .HasColumnName("LETTRES_DIRECTION");

                    b.HasKey("IdDirection")
                        .HasName("PK_DIRECTION");

                    b.ToTable("DIRECTION", null, t =>
                        {
                            t.HasCheckConstraint("chk_direction", "LETTRES_DIRECTION IN ('N', 'S', 'E', 'O', 'NE', 'NO', 'SE', 'SO')");
                        });
                });

            modelBuilder.Entity("API_OVH.Models.EntityFramework.Equipement", b =>
                {
                    b.Property<int>("IdEquipement")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("IDEQUIPEMENT");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdEquipement"));

                    b.Property<string>("EstActif")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(3)")
                        .HasDefaultValue("NSP")
                        .HasColumnName("ESTACTIF");

                    b.Property<decimal>("Hauteur")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric")
                        .HasDefaultValue(0m)
                        .HasColumnName("HAUTEUR");

                    b.Property<int>("IdSalle")
                        .HasColumnType("integer")
                        .HasColumnName("IDSALLE");

                    b.Property<int>("IdTypeEquipement")
                        .HasColumnType("integer")
                        .HasColumnName("IDTYPEEQUIPEMENT");

                    b.Property<decimal>("Largeur")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric")
                        .HasDefaultValue(0m)
                        .HasColumnName("LARGEUR");

                    b.Property<decimal>("Longueur")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric")
                        .HasDefaultValue(0m)
                        .HasColumnName("LONGUEUR");

                    b.Property<string>("NomEquipement")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("NOMEQUIPEMENT");

                    b.Property<decimal>("XEquipement")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(10,1)")
                        .HasDefaultValue(0m)
                        .HasColumnName("XEQUIPEMENT");

                    b.Property<decimal>("YEquipement")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(10,1)")
                        .HasDefaultValue(0m)
                        .HasColumnName("YEQUIPEMENT");

                    b.Property<decimal>("ZEquipement")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(10,1)")
                        .HasDefaultValue(0m)
                        .HasColumnName("ZEQUIPEMENT");

                    b.HasKey("IdEquipement")
                        .HasName("PK_EQUIPEMENT");

                    b.HasIndex("IdSalle");

                    b.HasIndex("IdTypeEquipement");

                    b.ToTable("EQUIPEMENT", null, t =>
                        {
                            t.HasCheckConstraint("chk_equip_actif", "ESTACTIF IN ('OUI', 'NON', 'NSP')");

                            t.HasCheckConstraint("chk_equip_haut", "HAUTEUR >= 0");

                            t.HasCheckConstraint("chk_equip_larg", "LARGEUR >= 0");

                            t.HasCheckConstraint("chk_equip_long", "LONGUEUR >= 0");
                        });
                });

            modelBuilder.Entity("API_OVH.Models.EntityFramework.Mur", b =>
                {
                    b.Property<int>("IdMur")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("IDMUR");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdMur"));

                    b.Property<decimal>("Hauteur")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(4,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("HAUTEUR");

                    b.Property<short>("IdDirection")
                        .HasColumnType("smallint")
                        .HasColumnName("IDDIRECTION");

                    b.Property<int>("IdSalle")
                        .HasColumnType("integer")
                        .HasColumnName("IDSALLE");

                    b.Property<decimal>("Longueur")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric")
                        .HasDefaultValue(0m)
                        .HasColumnName("LONGUEUR");

                    b.Property<decimal>("Orientation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(8,6)")
                        .HasDefaultValue(0m)
                        .HasColumnName("ORIENTATION");

                    b.HasKey("IdMur")
                        .HasName("PK_MUR");

                    b.HasIndex("IdDirection");

                    b.HasIndex("IdSalle");

                    b.ToTable("MUR", null, t =>
                        {
                            t.HasCheckConstraint("chk_hauteur", "HAUTEUR > 0");

                            t.HasCheckConstraint("chk_longueur", "LONGUEUR > 0");

                            t.HasCheckConstraint("chk_orientation_degrees", "ORIENTATION >= 0 AND ORIENTATION <= 360");
                        });
                });

            modelBuilder.Entity("API_OVH.Models.EntityFramework.Salle", b =>
                {
                    b.Property<int>("IdSalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("IDSALLE");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdSalle"));

                    b.Property<int>("IdBatiment")
                        .HasColumnType("integer")
                        .HasColumnName("IDBATIMENT");

                    b.Property<int>("IdTypeSalle")
                        .HasColumnType("integer")
                        .HasColumnName("IDTYPESALLE");

                    b.Property<string>("NomSalle")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("NOMSALLE");

                    b.Property<decimal>("SuperficieSalle")
                        .HasColumnType("numeric(12,2)")
                        .HasColumnName("SUPERFICIESALLE");

                    b.HasKey("IdSalle")
                        .HasName("PK_SALLE");

                    b.HasIndex("IdBatiment");

                    b.HasIndex("IdTypeSalle");

                    b.ToTable("SALLE", null, t =>
                        {
                            t.HasCheckConstraint("chk_salle_superficie", "estactif IN ('OUI', 'NON', 'NSP')");
                        });
                });

            modelBuilder.Entity("API_OVH.Models.EntityFramework.TypeEquipement", b =>
                {
                    b.Property<int>("IdTypeEquipement")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("IDTYPEEQUIPEMENT");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdTypeEquipement"));

                    b.Property<string>("NomTypeEquipement")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("NOMTYPEEQUIPEMENT");

                    b.HasKey("IdTypeEquipement")
                        .HasName("PK_TYPEEQUIPEMENT");

                    b.ToTable("TYPEEQUIPEMENT", (string)null);
                });

            modelBuilder.Entity("API_OVH.Models.EntityFramework.TypeSalle", b =>
                {
                    b.Property<int>("IdTypeSalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("IDTYPESALLE");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdTypeSalle"));

                    b.Property<string>("NomTypeSalle")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("NOMTYPESALLE");

                    b.HasKey("IdTypeSalle")
                        .HasName("PK_TYPESALLE");

                    b.ToTable("TYPESALLE", (string)null);
                });

            modelBuilder.Entity("API_OVH.Models.EntityFramework.Unite", b =>
                {
                    b.Property<int>("IdUnite")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("IDUNITE");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdUnite"));

                    b.Property<string>("NomUnite")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NOMUNITE");

                    b.Property<string>("SigleUnite")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnName("SIGLEUNITE");

                    b.HasKey("IdUnite")
                        .HasName("PK_UNITE");

                    b.ToTable("UNITE", (string)null);
                });

            modelBuilder.Entity("API_OVH.Models.EntityFramework.UniteCapteur", b =>
                {
                    b.Property<int>("IdCapteur")
                        .HasColumnType("integer")
                        .HasColumnName("IDCAPTEUR");

                    b.Property<int>("IdUnite")
                        .HasColumnType("integer")
                        .HasColumnName("IDUNITE");

                    b.HasKey("IdCapteur", "IdUnite")
                        .HasName("PK_UNITE_CAPTEUR");

                    b.HasIndex("IdUnite");

                    b.ToTable("UNITE_CAPTEUR", (string)null);
                });

            modelBuilder.Entity("API_OVH.Models.EntityFramework.Capteur", b =>
                {
                    b.HasOne("API_OVH.Models.EntityFramework.Salle", "SalleNavigation")
                        .WithMany()
                        .HasForeignKey("IdSalle")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_capteur_reference_salle");

                    b.HasOne("API_OVH.Models.EntityFramework.Salle", null)
                        .WithMany("Capteurs")
                        .HasForeignKey("SalleIdSalle");

                    b.Navigation("SalleNavigation");
                });

            modelBuilder.Entity("API_OVH.Models.EntityFramework.Equipement", b =>
                {
                    b.HasOne("API_OVH.Models.EntityFramework.Salle", "SalleNavigation")
                        .WithMany("Equipements")
                        .HasForeignKey("IdSalle")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_EQUIPEME_EST_DANS_SALLE");

                    b.HasOne("API_OVH.Models.EntityFramework.TypeEquipement", "TypeEquipementNavigation")
                        .WithMany("Equipements")
                        .HasForeignKey("IdTypeEquipement")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_EQUIPEME_EST_TYPEEQUI");

                    b.Navigation("SalleNavigation");

                    b.Navigation("TypeEquipementNavigation");
                });

            modelBuilder.Entity("API_OVH.Models.EntityFramework.Mur", b =>
                {
                    b.HasOne("API_OVH.Models.EntityFramework.Direction", "DirectionNavigation")
                        .WithMany("Murs")
                        .HasForeignKey("IdDirection")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_MUR_EST_ORIEN_DIRECTIO");

                    b.HasOne("API_OVH.Models.EntityFramework.Salle", "SalleNavigation")
                        .WithMany("Murs")
                        .HasForeignKey("IdSalle")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_MUR_CONTIENT_SALLE");

                    b.Navigation("DirectionNavigation");

                    b.Navigation("SalleNavigation");
                });

            modelBuilder.Entity("API_OVH.Models.EntityFramework.Salle", b =>
                {
                    b.HasOne("API_OVH.Models.EntityFramework.Batiment", "BatimentNavigation")
                        .WithMany("Salles")
                        .HasForeignKey("IdBatiment")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_SALLE_SE_TROUVE_BATIMENT");

                    b.HasOne("API_OVH.Models.EntityFramework.TypeSalle", "TypeSalleNavigation")
                        .WithMany("Salles")
                        .HasForeignKey("IdTypeSalle")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_SALLE_EST_QUALI_TYPESALL");

                    b.Navigation("BatimentNavigation");

                    b.Navigation("TypeSalleNavigation");
                });

            modelBuilder.Entity("API_OVH.Models.EntityFramework.UniteCapteur", b =>
                {
                    b.HasOne("API_OVH.Models.EntityFramework.Capteur", "CapteurNavigation")
                        .WithMany("UnitesCapteur")
                        .HasForeignKey("IdCapteur")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_UNICAPT_CAPT");

                    b.HasOne("API_OVH.Models.EntityFramework.Unite", "UniteNavigation")
                        .WithMany("UnitesCapteur")
                        .HasForeignKey("IdUnite")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_UNICAPT_UNI");

                    b.Navigation("CapteurNavigation");

                    b.Navigation("UniteNavigation");
                });

            modelBuilder.Entity("API_OVH.Models.EntityFramework.Batiment", b =>
                {
                    b.Navigation("Salles");
                });

            modelBuilder.Entity("API_OVH.Models.EntityFramework.Capteur", b =>
                {
                    b.Navigation("UnitesCapteur");
                });

            modelBuilder.Entity("API_OVH.Models.EntityFramework.Direction", b =>
                {
                    b.Navigation("Murs");
                });

            modelBuilder.Entity("API_OVH.Models.EntityFramework.Salle", b =>
                {
                    b.Navigation("Capteurs");

                    b.Navigation("Equipements");

                    b.Navigation("Murs");
                });

            modelBuilder.Entity("API_OVH.Models.EntityFramework.TypeEquipement", b =>
                {
                    b.Navigation("Equipements");
                });

            modelBuilder.Entity("API_OVH.Models.EntityFramework.TypeSalle", b =>
                {
                    b.Navigation("Salles");
                });

            modelBuilder.Entity("API_OVH.Models.EntityFramework.Unite", b =>
                {
                    b.Navigation("UnitesCapteur");
                });
#pragma warning restore 612, 618
        }
    }
}
